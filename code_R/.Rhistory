.lib.Path()
??libPath
help("library")
.libPaths()
install.packages("ctv")
install.views("econometrics")
help(ctv)
help("ctv")
help(install.views)
available.views()
install.views("Econometrics")
q()
dirstruct("D:/Data")
.libPaths()
dirstruct("D:/Data")
dirstruct <- function(datadir, ...){
#source("directory.struct.R")
# These two directories always reside in data_NFSPanelAnalysis project directory, no matter
# which project you're working on. Will always look for data_NFSPanelAnalysis one directory above paneldir
nfsdir <- paste(datadir, "data_NFSPanelAnalysis/", sep='')
nfsorigdata <- paste(nfsdir, "OrigData/", sep='')
nfsoutdata <- paste(nfsdir, "OutData/", sep='')
regional.outdatadir <- paste(nfsoutdata, "RegionalAnalysis/", sep='')
# FADN panel directories
fadndir <- paste(datadir, "data_FADNPanelAnalysis/", sep='')
fadnorigdata <- paste(fadndir, "OrigData/", sep='')
fadnoutdata <- paste(fadndir, "OutData/", sep='')
fadn9907dir <- paste(fadnorigdata, "FADN_1/csv/", sep='')
#fadn9907dir <- paste(fadnorigdata, "eupanel9907/csv/", sep='')
fadn0407dir <- paste(fadnorigdata, "eupanel0407/csv/", sep='')
fadn2dir <- paste(fadnorigdata, "FADN_2/TEAGSC/", sep='')
}
dirstruct("D:/Data")
datadir <- "D:/Data"
dirstruct(datadir)
dirstruct <- function(datadir, ...){
#source("directory.struct.R")
# These two directories always reside in data_NFSPanelAnalysis project directory, no matter
# which project you're working on. Will always look for data_NFSPanelAnalysis one directory above paneldir
nfsdir <- paste(datadir, "data_NFSPanelAnalysis/", sep='')
nfsorigdata <- paste(nfsdir, "OrigData/", sep='')
nfsoutdata <- paste(nfsdir, "OutData/", sep='')
regional.outdatadir <- paste(nfsoutdata, "RegionalAnalysis/", sep='')
# FADN panel directories
fadndir <- paste(datadir, "data_FADNPanelAnalysis/", sep='')
fadnorigdata <- paste(fadndir, "OrigData/", sep='')
fadnoutdata <- paste(fadndir, "OutData/", sep='')
fadn9907dir <- paste(fadnorigdata, "FADN_1/csv/", sep='')
#fadn9907dir <- paste(fadnorigdata, "eupanel9907/csv/", sep='')
fadn0407dir <- paste(fadnorigdata, "eupanel0407/csv/", sep='')
fadn2dir <- paste(fadnorigdata, "FADN_2/TEAGSC/", sep='')
return(fadndir)
}
dirstruct(datadir)
dirstruct <- function(datadir, ...){
#source("directory.struct.R")
# These two directories always reside in data_NFSPanelAnalysis project directory, no matter
# which project you're working on. Will always look for data_NFSPanelAnalysis one directory above paneldir
nfsdir <- paste(datadir, "data_NFSPanelAnalysis/", sep='')
nfsorigdata <- paste(nfsdir, "OrigData/", sep='')
nfsoutdata <- paste(nfsdir, "OutData/", sep='')
regional.outdatadir <- paste(nfsoutdata, "RegionalAnalysis/", sep='')
# FADN panel directories
fadndir <- paste(datadir, "data_FADNPanelAnalysis/", sep='')
fadnorigdata <- paste(fadndir, "OrigData/", sep='')
fadnoutdata <- paste(fadndir, "OutData/", sep='')
fadn9907dir <- paste(fadnorigdata, "FADN_1/csv/", sep='')
#fadn9907dir <- paste(fadnorigdata, "eupanel9907/csv/", sep='')
fadn0407dir <- paste(fadnorigdata, "eupanel0407/csv/", sep='')
fadn2dir <- paste(fadnorigdata, "FADN_2/TEAGSC/", sep='')
return(fadndir=fadndir)
}
dirstruct(datadir)
dirstruct <- function(datadir, ...){
source("directory.struct.R")
}
dirstruct(datadir)
dirstruct <- function(datadir, ...){
source("a_handydo/directory.struct.R")
}
dirstruct(datadir)
dirstruct <- function(datadir, ...){
source("./a_handydo/directory.struct.R")
}
dirstruct(datadir)
dirstruct <- function(datadir, ...){
source("D:/Data/a_handydo/directory.struct.R")
}
dirstruct <- function(datadir, ...){
dirstruct <- function(datadir, ...){}
}
)
dirstruct(datadir)
<
dirstruct <- function(datadir, ...){
source("D:/Data/a_handydo/directory.struct.R")
}
dirstruct(datadir)
dirstruct <- function(datadir, ...){
source("D:/a_handydo/directory.struct.R")
}
dirstruct(datadir)
datadir <- "D:/Data"
dirstruct(datadir)
getwd()
datadir <- "D:/Data"
dirstruct(datadir)
dirstruct("D:/Data")
datadir <- "D:/Data"
dirstruct(datadir)
rm(list=ls())
datadir <- "D:/Data"
dirstruct(datadir)
rm(list=ls())
source(.Rprofile)
rm(list=ls())
source(".Rprofile")
datadir <- "D:/Data"
dirstruct(datadir)
fadn <- data.table(read.csv(paste(fadn9907dir, "Ireland.csv", sep='')))
rm(list=ls())
source(".Rprofile")
rm(list=ls())
source(".Rprofile")
datadir <- "D:/Data"
dirstruct(datadir)
fadn <- data.table(read.csv(paste(fadn9907dir, "Ireland.csv", sep='')))
rm(list=ls())
source(".Rprofile")
datadir <- "D:/Data"
dirstruct(datadir)
fadn <- data.table(read.csv(paste(fadn9907dir, "Ireland.csv", sep='')))
library("data.table")
rm(list=ls())
source(".Rprofile")
datadir <- "D:/Data"
dirstruct(datadir)
rm(list=ls())
source(".Rprofile")
datadir <- "D:/Data"
dirstruct(datadir)
#library("data.table")
fadn <- data.table(read.csv(paste(fadn9907dir, "Ireland.csv", sep='')))
install.packages("datamart")
install.packages("D:\\datamart_0.4.2.tar.gz", repos = NULL, type="source")
library("datamart")
install.packages("smarterpoland")
install.packages("D:\\datamart_0.4.2.tar.gz", repos = NULL, type="source")
install.packages("datamart")
install.packages("D:\\datamart_0.4.2.tar.gz", repos = NULL, type="source")
install.packages("installr")
Vectorize
install.packages("rJava", lib="D:/programs/R/R-2.15.0/library/")
getwd()
dir()
getwd()
.libPaths()
dir()
dir(".Rprofile")
dir(".R")
.libPaths()
.libPaths9
.libPaths()
help(sytem())
system(explorer)
system("explorer")
system("explorer" R.home())
home <- R.home()
system("explorer" home
system("explorer" home)
R.home()
system("explorer C:\")
)
/)
\\)
system("explorer C:")
system("explorer C:\Program Files")
system("explorer C:\\Program Files")
library("datamart")
install.packages("datamart")
library("datamart")
eurostat_web()
eurostat <- eurostat_web()
eurostat$eurostat_toc()
str(eurostat)
eurostat_toc(eurostat)
eurostat_data()
help(methods)
eurostat
str(eurostat)
eurostat@data.lst
eurostat@data.lst$dat
eurostat@data.lst$toc
print(eurostat@data.lst$toc)
eurostat@data.lst$toc@template
eurostat@data.lst$toc@transform.fct
eurostat@data.lst$dat@extract.fct
eurostat@data.lst$dat@extract.fct(eurostat@data.lst$toc@template)
eurostat@data.lst$dat@map.lst
eurostat@data.lst$dat@template
eurostat@data.lst$dat@transform.fct
data <- eurostat@data.lst$dat@transform.fct(eurostat@data.lst$dat@extract.fct(eurostat@data.lst$dat@template))
help(datamart)
install.packages("devtools")
library("devtools")
install.packages("http://cran.r-project.org/bin/windows/Rtools/Rtools3.1")
install_github("rsdmx", "opensdmx")
myUrl <- "http://data.fao.org/sdmx/repository/data/CROP_PRODUCTION/.156.5312../FAO?startPeriod=2008&endPeriod=2008"
dataset <- readSDMX(myUrl)
library(rsdmx)
dataset <- readSDMX(myUrl)
stats <- as.data.frame(dataset)
view(stats)
View(stats)
help(View)
stats
stats <- data.table(stats)
library(data.table)
install.packages("data.table")
stats <- data.table(stats)
stats
setkey(stats,"COMMODITY")
stats["515"]
stats[,summary(obsTime)]
help(rsdmx)
rm(list=ls())
help(readSDMX)
dataflows <- "http://ec.europa.eu/eurostat/SDMX/diss-web/rest/dataflow/ESTAT/all/latest"
readSDMX(dataflows)
library(XML)
help("Defunct")
xmlParse(dataflows)
help(rhtml)
help(html)
??html
help("html")
help("rhtml")
help("Rhtml")
install.packages(c("AER", "apt", "deSolve", "Ecdat", "erer", "fda", "fields", "forecast", "ggplot2", "ineq", "knitr", "LearnBayes", "lme4", "maps", "maptools", "markdown", "MASS", "Matrix", "mgcv", "micEconAids", "mnormt", "MSBVAR", "mvtnorm", "np", "Rcpp", "RcppArmadillo", "RcppEigen", "rgeos", "rjson", "sampleSelection", "sem", "spdep", "statmod", "VGAM"))
## Get the package if you don't have it
# install.packages("devtools")
# require("devtools")
# install_github("rsdmx", "opensdmx")
library(rsdmx)
# Example from Eurostat getting started portal at:
#    http://epp.eurostat.ec.europa.eu/portal/page/portal/sdmx_web_services/getting_started/a_few_useful_points
# To build the query URL matching the following ...
#http://ec.europa.eu/eurostat/SDMX/diss-web/rest/data/nama_gdp_c/.EUR_HAB.B1GM.DE+FR+IT?startPeriod=2010&endPeriod=2013
root        <- "http://ec.europa.eu/eurostat/SDMX/diss-web/rest/"
resource    <- "data"
flowRef     <- "nama_gdp_c"
key         <- ".EUR_HAB.B1GM.DE+FR+IT"
time.filter <- "?startPeriod=2010&endPeriod=2013"
query <- paste(root,resource,flowRef,key,time.filter, sep="")
file  <- ""
data  <- readSDMX(query)
library(RJSDMX)
data <- readSDMX("http://ec.europa.eu/eurostat/SDMX/diss-web/rest/data/nama_gdp_c/.EUR_HAB.B1GM.DE+FR+IT?startPeriod=2010&endPeriod=2013")
data <- readSDMX("http://ec.europa.eu/eurostat/SDMX/diss-web/rest/data/nama_gdp_c/.EUR_HAB.B1GM.DE+FR+IT?startPeriod=2010")
library("RJSDMX")
help("RJSDMX")
help(SdmxClient)
help(getDataProviders)
getDataProviders
getDataProviders()
getwd()
dir()
help(copy)
help(cp)
??cp
??copy
file.copy("data_EUROSTAT/code_R/configuration.properties", "./configuration.properties")
dir()
getDataProviders()
client <- SdmxClient('ECB')
getDataFlows(client)
getDataFlows("client")
getDataFlows("ECB")
help(getDataFlows)
getDataFlows(client, "Exchange")
SdmxClient
client
getDataProviders()
client <- SdmxClient('IMF')
getDataFlows(client)
client
library(rsdmx)
install.packages("Rcpp")
library(rsdmx)
data <- readSDMX("D://Data//data_EUROSTAT/OrigData/BulkDownload/COMP_20140502105952/")
data <- readSDMX("D://Data//data_EUROSTAT/OrigData/BulkDownload/COMP_20140502105952/manifest.xml")
help(readSDMX)
data <- readSDMX("D://Data//data_EUROSTAT/OrigData/BulkDownload/ESTAT_20140502105952/manifest.xml")
data <- readSDMX("D://Data//data_EUROSTAT/OrigData/BulkDownload/ESTAT_20140502105952/manifest.xml", isURL=F)
data <- readSDMX("D://Data//data_EUROSTAT/OrigData/BulkDownload/ESTAT_20140502105952/datasets/DS_008573.rdf", isURL=F)
data <- readSDMX("D://Data//data_EUROSTAT/OrigData/BulkDownload/ESTAT_20140502105952/datasets/aact_eaa01.rdf", isURL=F)
data <- readSDMX("http://ec.europa.eu/eurostat/SDMX/diss-web/rest/data/nama_gdp_c/.EUR_HAB.B1GM.DE+FR+IT?startPeriod=2010&endPeriod=2013", isURL=T)
data <- readSDMX("D://Data//data_EUROSTAT/OrigData/BulkDownload/ESTAT_20140502105952/manifest.xml", isURL=F)
library(rsdmx)
dataURL <- "http://stats.oecd.org/restsdmx/sdmx.ashx/GetData/MIG/TOT../OECD?startTime=2000&endTime=2011"
sdmx <- readSDMX(dataURL)
stats <- as.data.frame(sdmx)
head(stats)
rm(list=ls())
source('~/.active-rstudio-document', echo=TRUE)
source('D:/Data/data_EUROSTAT/code_R/readSDMX_with_rsdmx.R', echo=TRUE)
readSDMX
getwd()
setwd("data_EUROSTAT//OrigData//BulkDownload/")
data <- readSDMX("ESTAT_20140502105952/")
data <- readSDMX("ESTAT_20140502105952/", isURL=F)
data <- readSDMX("ESTAT_20140502105952", isURL=F)
data <- readSDMX("http://epp.eurostat.ec.europa.eu/NavTree_prod/everybody/BulkDownloadListing")
data <- readSDMX("http://epp.eurostat.ec.europa.eu/NavTree_prod/everybody/BulkDownloadListing?dir=data&sort=1")
dir()
setwd("..")
dir()
data <- readSDMX("aact_ali01.sdmx")
data <- readSDMX("aact_ali01.sdmx", isURL=F)
data <- readSDMX("aact_ali01.sdmx/aact_ali01.sdmx.xml", isURL=F)
data
library(data.table)
file  <- "aact_ali01.sdmx/aact_ali01.sdmx.xml"
data  <- data.table(as.data.frame(readSDMX(file)))
data  <- data.table(as.data.frame(readSDMX(file, isURL=F)))
data
warnings()
source('D:/Data/data_EUROSTAT/code_R/readSDMX_with_rsdmx.R', echo=TRUE)
getwd()
dir
dir()
dir("tsc00001.sdmx/")
source('D:/Data/data_EUROSTAT/code_R/readSDMX_with_rsdmx.R', echo=TRUE)
data
library(XML)
help(getURL)
library(RCurl)
xmlparsed <- xmlParse("http://ec.europa.eu/eurostat/SDMX/diss-web/rest/dataflow/ESTAT/all/latest")
xml_doc <- getURL("http://ec.europa.eu/eurostat/SDMX/diss-web/rest/dataflow/ESTAT/all/latest")
xml_parsed <- xmlParse(xml_doc)
??REST
source('D:/Data/data_OECD/code_R/readSDMX_with_rsdmx.R', echo=TRUE)
source('D:/Data/data_OECD/code_R/readSDMX_with_rsdmx.R')
source('D:/Data/data_OECD/code_R/readSDMX_with_rsdmx.R', echo=TRUE)
source('D:/Data/data_EUROSTAT/code_R/readSDMX_with_rsdmx.R', echo=TRUE)
data
source('D:/Data/data_EUROSTAT/code_R/readSDMX_with_rsdmx.R', echo=TRUE)
library(RCurl)
rm(list=ls())
source('D:/Data/data_EUROSTAT/code_R/readSDMX_with_rsdmx.R', echo=TRUE)
## Get the package if you don't have it
# install.packages("devtools")
# require("devtools")
# install_github("rsdmx", "opensdmx")
library(rsdmx)
library(data.table)
library(RCurl)
# Example from Eurostat getting started portal at:
#    http://epp.eurostat.ec.europa.eu/portal/page/portal/sdmx_web_services/getting_started/a_few_useful_points
# To build the query URL matching the following ...
#http://ec.europa.eu/eurostat/SDMX/diss-web/rest/data/nama_gdp_c/.EUR_HAB.B1GM.DE+FR+IT?startPeriod=2010&endPeriod=2013
root        <- "http://ec.europa.eu/eurostat/SDMX/diss-web/rest"
resource    <- "GetData"
flowRef     <- "t_ef"
key         <- "..."
time.filter <- ""
query <- paste(root,resource,flowRef,key, sep="/")
sdmx_xml_file <- getURL(query)
data  <- data.table(as.data.frame(readSDMX(sdmx_xml_file))
)
source('D:/Data/data_EUROSTAT/code_R/readSDMX_with_rsdmx.R', echo=TRUE)
sdmx_xml_file
source('D:/Data/data_EUROSTAT/code_R/readSDMX_with_rsdmx.R', echo=TRUE)
query
source('D:/Data/data_EUROSTAT/code_R/readSDMX_with_rsdmx.R', echo=TRUE)
install.packages(“rdatamarket”)
source('D:/Data/data_EUROSTAT/code_R/R_data_market.R', echo=TRUE)
require("devtools")
install_github("eurostat_r")
help(install_github)
install_github("toprach/eurostat_r")
getwd()
setwd("../code_R/")
dir()
source("eurostat_r/eurostat_r-master//eurostat_r.r")
read.eurostat("t_ef", "en")
read.eurostat("lfsa_ewhuis", "en")
data <- read.eurostat("t_agric", "en")
data <- read.eurostat("tag_00001", "en")
data <- read.eurostat(" lfsa_ewhana", "en")
data <- read.eurostat("lfsa_igan", "en")
data
data <- read.eurostat("tag_00040", "en")
source("eurostat_r/eurostat_r-master//eurostat_r.r")
data <- read.eurostat("tag_00040", "en")
source("eurostat_r/eurostat_r-master//eurostat_r.r")
data <- read.eurostat("lfsa_igan", "en")
data
help(rdatamarket)
help("rdatamarket")
library(rdatamarket)
help("rdatamarket")
help(rdatamarket)
install.packages("rdatamarket")
dmlist("17tm", Country=c("Algeria", "Angola"))
library(rdatamarket)
dmlist("17tm", Country=c("Algeria", "Angola"))
rm(list=ls())
help(dmlist)
data <- dmlist("https://datamarket.com/data/set/1b4b/cheese-distribution-of-enterprises-by-volume-of-annual-production#")
dmlist("1b4b")
data <- dmlist("1b4b")
str(data)
data <- data.table(data)
library(data.table)
data <- data.table(data)
data
levels(data$Geopolitical.entity..reporting)
levels(data$Geopolitical.entity..reporting.)
colnames(data)
data[, levels(.SD)]
data[, summary(.SD)]
colnames(data)
data[, str(.SD)]
str(data)
levels(Agricultural.indicator)
data[,levels(Agricultural.indicator)]
keycols <- c("Geopolitical.entity..reporting.", "Agricultural.indicator")
setkeyv(data,keycols)
help(.SDset)
help(data.table)
data[,levels(.SD),.SDcols=c("Geopolitical.entity..reporting.", "Agricultural.indicator")]
data[,lapply(.SD, levels),.SDcols=c("Geopolitical.entity..reporting.", "Agricultural.indicator")]
levels <- data.table(data[,lapply(.SD, levels),.SDcols=c("Geopolitical.entity..reporting.", "Agricultural.indicator")])
levels
View(levels)
data[J("Ireland","Annual production (1000 t)" )]
data_IE <- data[J("Ireland","Annual production (1000 t)" )]
colnames(data_IE)
keycols <- c("Volume.in.Tonnes", "Year")
setkeyv(data_IE, keycols)
data_IE["Total"]
data_IE <- data[J("Ireland","Number of enterprises" )]
data_IE
data <- dmlist("http://appsso.eurostat.ec.europa.eu/nui/show.do?dataset=apro_mk_strch&lang=en")
data <- dmlist("1b4b", "Geopolitical.entity..reporting."="Ireland")
data
data <- dmlist("1b4b", "Geopolitical entity  reporting "="Ireland")
data
data <- dmlist("1b4b", "Geopolitical entity (reporting)"="Ireland")
data
help(hist)
data
data[,hist(value), by=Volume.in.Tonnes]
data[,hist(value)]
data[,hist(Value)]
data,Value
data[Value]
data[,Value]
data
data <- data.table(dmlist("1b4b", "Geopolitical entity (reporting)"="Ireland"))
data
levels(data$Geopolitical.entity..reporting.)
setkey("Agricultural.indicator")
setkey(data, "Agricultural.indicator")
data <- data["Number of enterprises"]
data_IE[!"Total"]
keycols <- c("Volume.in.Tonnes", "Year")
source('D:/Data/data_EUROSTAT/code_R/R_data_market.R', echo=TRUE)
data
help(bar)
help(barchart)
help(plot)
barplot(data[,Value, by=Volume.in.Tonnes])
barplot(data[,Value])
help(barplot)
data[,barplot(Value), by=Volume.in.Tonnes]
data[J("", "1996"),barplot(Value)]
data["1996", barplot(Value)]
data[1996, barplot(Value)]
data[1996,Value]
data["1996",Value]
data[J(!is.na(Volume.in.Tonnes),"1996"),Value]
data[,str(Year)]
data[1996]
data[1997]
data[1998]
data[1999]
data
data[J("1 to 4 000", 2012)]
data[J("1 to 4 000", 1996)]
data[J("1 to 4 000", 1997)]
data[J("1 to 4 000", 1994)]
data[J("1 to 4 000", "1994")]
data[J("1 to 4 000", 1994), .SD]
data[J("1 to 4 000", 1994)]
data
data[J("100 t or less", 1994)]
data[J("100 t or less")]
data[J("100 t or less", 2000)]
data[J("100 t or less", Year<2014)]
data[J("100 t or less", < 2014)]
data[J(Volume.in.Tonnes=="100 t or less", Year < 2014)]
data[J(Volume.in.Tonnes=="100 t or less", as.factor(Year < 2014)]
data[J(Volume.in.Tonnes=="100 t or less", as.factor(Year < 2014))]
help(as.factor)
data[J(Volume.in.Tonnes=="100 t or less", as.character(Year < 2014))]
data[J(as.logical(Volume.in.Tonnes=="100 t or less"), Year < 2014)]
help(as.logical)
str(as.logical(Volume.in.Tonnes=="100 t or less"))
str(as.logical(data$Volume.in.Tonnes=="100 t or less"))
data[Volume.in.Tonnes=="100 t or less"][Year<2014]
